import java.util.Stack;

public class ReverseDLLUsingStack {
    public static class Node{
        int data;
         Node next;
         Node prev;
        Node(int data){
            this.data = data;
        }
    }
    public static Node reverse(Node head){
        Stack<Integer>st = new Stack<>();
        Node temp = head;
        while(temp!=null){
            st.push(temp.data);
            temp = temp.next;
        }
        temp = head;
        while(temp!=null){
            temp.data = st.peek() ;
            st.pop();
            temp  =temp.next;
        }
        return head;
    }
    public static void display( Node random){
         Node temp = random;
        while(temp.prev!=null){
            temp =  temp.prev;
        }
        while(temp!=null){
            System.out.print(temp.data+"<->");
            temp =  temp.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
         Node a = new  Node(1);
         Node b = new  Node(3);
         Node c = new  Node(5);
         Node d = new  Node(7);
        a.prev = null;
        a.next = b;
        b.prev = a;
        b.next = c;
        c.prev = b;
        c.next = d;
        d.prev = c;
        d.next = null;
        System.out.println("Befor : ");
        display(c);
        System.out.println("After : ");
        reverse(a);
        display(a);
    }
}
